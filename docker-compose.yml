version: '3.8'

services:
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
      - .env/:/app/.env
    ports:
      - 3001:3001
    command: make run
    depends_on:
      - db

  parser:
    image: node:latest
    build: ./node
    command: node main.js
    volumes:
      - ./node:/app
    working_dir: /app
    environment:
      - HOST=0.0.0.0
    ports:
      - 3002:3002

  db:
    image: postgres
    environment:
      POSTGRES_DB: internship
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
  
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app/dist:/usr/share/nginx/html
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - api
      - db

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: always

  elasticsearch:
    image: bitnami/elasticsearch:8.8.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  logstash:
    image: bitnami/logstash:8.8.1
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./api/logs:/usr/share/logstash/logs:ro
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: bitnami/kibana:8.8.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
