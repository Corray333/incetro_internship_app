[
    {
        "label": "hmac",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hmac",
        "description": "hmac",
        "detail": "hmac",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "unquote",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "token",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "token = \"7248950566:AAGj_-RMBPj2Fmk_0xfYQvsjlns9yzHH198\"\ninit_data = \"query_id=AAGc5YMWAAAAAJzlgxb_3ABG&user=%7B%22id%22%3A377742748%2C%22first_name%22%3A%22%D0%9C%D0%B0%D1%80%D0%BA%22%2C%22last_name%22%3A%22%D0%90%D0%BD%D0%B8%D0%BA%D0%B8%D0%BD%22%2C%22username%22%3A%22corray9%22%2C%22language_code%22%3A%22en%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1721732407&hash=21fe12890b15130ec03d52af1072181ba7b7b4e7b37d03dba91757b53287c80f\"\nc_str=\"WebAppData\"\ninit_data = sorted([ chunk.split(\"=\") \n        for chunk in unquote(init_data).split(\"&\") \n        if chunk[:len(\"hash=\")]!=\"hash=\"],\n    key=lambda x: x[0])\ninit_data = \"\\n\".join([f\"{rec[0]}={rec[1]}\" for rec in init_data])\nsecret_key = hmac.new(c_str.encode(), token.encode(),\n    hashlib.sha256 ).digest()",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "init_data",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "init_data = \"query_id=AAGc5YMWAAAAAJzlgxb_3ABG&user=%7B%22id%22%3A377742748%2C%22first_name%22%3A%22%D0%9C%D0%B0%D1%80%D0%BA%22%2C%22last_name%22%3A%22%D0%90%D0%BD%D0%B8%D0%BA%D0%B8%D0%BD%22%2C%22username%22%3A%22corray9%22%2C%22language_code%22%3A%22en%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1721732407&hash=21fe12890b15130ec03d52af1072181ba7b7b4e7b37d03dba91757b53287c80f\"\nc_str=\"WebAppData\"\ninit_data = sorted([ chunk.split(\"=\") \n        for chunk in unquote(init_data).split(\"&\") \n        if chunk[:len(\"hash=\")]!=\"hash=\"],\n    key=lambda x: x[0])\ninit_data = \"\\n\".join([f\"{rec[0]}={rec[1]}\" for rec in init_data])\nsecret_key = hmac.new(c_str.encode(), token.encode(),\n    hashlib.sha256 ).digest()\ndata_check = hmac.new( secret_key, init_data.encode(),",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "init_data",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "init_data = sorted([ chunk.split(\"=\") \n        for chunk in unquote(init_data).split(\"&\") \n        if chunk[:len(\"hash=\")]!=\"hash=\"],\n    key=lambda x: x[0])\ninit_data = \"\\n\".join([f\"{rec[0]}={rec[1]}\" for rec in init_data])\nsecret_key = hmac.new(c_str.encode(), token.encode(),\n    hashlib.sha256 ).digest()\ndata_check = hmac.new( secret_key, init_data.encode(),\n    hashlib.sha256)\nprint(data_check.hexdigest())",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "init_data",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "init_data = \"\\n\".join([f\"{rec[0]}={rec[1]}\" for rec in init_data])\nsecret_key = hmac.new(c_str.encode(), token.encode(),\n    hashlib.sha256 ).digest()\ndata_check = hmac.new( secret_key, init_data.encode(),\n    hashlib.sha256)\nprint(data_check.hexdigest())",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "secret_key",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "secret_key = hmac.new(c_str.encode(), token.encode(),\n    hashlib.sha256 ).digest()\ndata_check = hmac.new( secret_key, init_data.encode(),\n    hashlib.sha256)\nprint(data_check.hexdigest())",
        "detail": "test",
        "documentation": {}
    },
    {
        "label": "data_check",
        "kind": 5,
        "importPath": "test",
        "description": "test",
        "peekOfCode": "data_check = hmac.new( secret_key, init_data.encode(),\n    hashlib.sha256)\nprint(data_check.hexdigest())",
        "detail": "test",
        "documentation": {}
    }
]