input {
    file {
        path => "/usr/share/logstash/logs/*.log"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        codec => multiline {
            pattern => "^\[\d{2}:\d{2}:\d{2}\.\d{3}\]"  # Логи начинаются с временной метки
            negate => true
            what => "previous"
        }
    }
}

filter {
    # Извлечение временной метки и уровня логирования
    grok {
        match => {
            "message" => "\[%{TIME:timestamp}\] %{LOGLEVEL:log_level}: %{GREEDYDATA:log_message} \{.*\}$"
        }
    }

    # Попытка извлечь JSON из сообщения
    grok {
        match => {
            "log_message" => "%{GREEDYDATA:message_body} \{(?<json_message>\{.*\})\}$"
        }
        overwrite => [ "log_message" ]
    }

    # Попытка распарсить JSON
    json {
        source => "json_message"
        target => "parsed_json"
        add_tag => ["json_parsed"]
    }

    # Преобразование времени в @timestamp
    date {
        match => ["timestamp", "HH:mm:ss.SSS"]
        target => "@timestamp"
    }

    # Удаление полей, которые больше не нужны
    mutate {
        remove_field => ["json_message", "timestamp"]
    }
}

output {
    elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "goapp-logs-%{+YYYY.MM.dd}"
    }

    stdout {
        codec => rubydebug
    }
}
